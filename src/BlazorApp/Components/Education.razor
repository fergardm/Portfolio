<section class="info-section" id="education">
    <div class="info-container left">
        <h2>
        <img src="images/education-svgrepo-com.svg" class="section-icon"; 
                    alt="education" position="absolute; left:2" style="width: 40px; height: auto;" />
        Education
        </h2>
    @if (educations is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        @foreach (var education in educations)
        {
             <div class="info-item">
                 <a href="@education.Url" target="_blank">
                     <img src="@education.Logo" alt="Logo" class="info-logo" />
                </a>
                <div class="info-text">
                    <h3 class="info-title">@education.Title</h3>
                    <p class="info-description">@education.Description</p>
                </div>
            </div>
        }
    }
    </div>
    <div class="info-container right">
         <h2>Languages</h2>
    @if (languages is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        @foreach (var language in languages)
        {
             <div class="info-item">
                 <a href="@language.Url" target="_blank">
                     <img src="@language.Logo" alt="Logo" class="info-logo" />
                </a>
                <div class="info-text">
                    <h3 class="info-title">@language.Title</h3>
                    <p class="info-description">@language.Description</p>
                </div>
            </div>
        }
    }

    </div>
</section>

@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private List<EducationCertifs>? educations;
    private List<LanguageCertifs>? languages;

    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        educations = await Http.GetFromJsonAsync<List<EducationCertifs>>("sample-data/educations.json");
        languages = await Http.GetFromJsonAsync<List<LanguageCertifs>>("sample-data/languages.json");
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "education");
    }
}
